{"pages":[{"title":"书单","date":"2017-09-22T13:17:24.610Z","updated":"2017-09-22T13:17:24.585Z","comments":false,"path":"books/index.html","permalink":"http://blog.cofess.com/books/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2017-09-22T13:15:17.629Z","updated":"2017-09-22T13:15:17.596Z","comments":true,"path":"links/index.html","permalink":"http://blog.cofess.com/links/index.html","excerpt":"","text":""},{"title":"分类","date":"2017-09-22T13:14:30.437Z","updated":"2017-09-22T13:14:30.406Z","comments":false,"path":"categories/index.html","permalink":"http://blog.cofess.com/categories/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2017-09-22T13:18:55.982Z","updated":"2017-09-22T13:18:55.952Z","comments":false,"path":"repository/index.html","permalink":"http://blog.cofess.com/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2017-09-22T13:14:50.073Z","updated":"2017-09-22T13:14:50.041Z","comments":false,"path":"tags/index.html","permalink":"http://blog.cofess.com/tags/index.html","excerpt":"","text":""},{"title":"关于","date":"2017-09-22T13:12:51.979Z","updated":"2017-09-22T13:12:51.953Z","comments":false,"path":"about/index.html","permalink":"http://blog.cofess.com/about/index.html","excerpt":"","text":"&#123; name: 'cofess' age: 29, gender: '男', profession: 'Web Developer &amp; Designer', experience: '5年', address: '广东省深圳市', education: '本科', github: 'https://github.com/cofess', blog: 'http://blog.cofess.com', email: 'cofess@foxmail.com', description: '致力于网站建设与前端用户体验设计', skills: [ ['Html', 'Javascript', 'jQuery', 'CSS', 'ES6', 'Node'], ['Webpack', 'Gulp'], ['Less','Sass'], ['Git', 'SVN'], ['Vue'], ['Bootstrap', 'SUI Mobile', 'light7'], ['WordPress', 'OpenCart'], ['平面设计'] ], devTools: [ ['Sublime Text', 'Visual Studio Code', 'Notepad++'], ['Chrome DevTools', 'Fiddler'], ['SourceTree', 'TortoiseSVN'], ['SwitchHosts'], ['Navicat', 'XAMPP'], ] &#125;"}],"posts":[{"title":"Hexo博客主题pure使用说明","slug":"hexo-blog-theme-pure-usage-instructions","date":"2017-11-01T13:45:08.000Z","updated":"2017-11-12T09:07:05.927Z","comments":true,"path":"2017/11/01/hexo-blog-theme-pure-usage-instructions.html","link":"","permalink":"http://blog.cofess.com/2017/11/01/hexo-blog-theme-pure-usage-instructions.html","excerpt":"","text":"pureA brand new default theme for [Hexo]. Preview | English documentation 外观首页 | 归档 | 分类 | 标签 | 项目 | 书单 | 友链 | 关于 启用主题Execute the following command under your hexo folder.git clone https://github.com/cofess/hexo-theme-pure.git themes/pureThen modify the property theme of the file hexo/_config.yml to theme: pure 更新主题Execute the following command to update theme.cd themes/puregit pull 安装插件 hexo-wordcountnpm install hexo-wordcount --save hexo-generator-json-contentnpm install hexo-generator-json-content --save hexo-generator-feednpm install hexo-generator-feed --save hexo-generator-sitemapnpm install hexo-generator-sitemap --save hexo-generator-baidu-sitemapnpm install hexo-generator-baidu-sitemap --save 主题配置 导航菜单# 导航菜单menu: Home: . Archives: archives # 归档 Categories: categories # 分类 Tags: tags # 标签 Repository: repository # github repositories Books: books # 书单 Links: links # 友链 About: about # 关于# 导航菜单图标（font awesome）menu_icons: enable: true # 是否启用菜单图标 home: fa-dashboard archives: fa-delicious categories: fa-folder tags: fa-tags repository: fa-code books: fa-leanpub links: fa-gg about: fa-coffee 搜索主题内置三种站内搜索方式：insight、swiftype、baidu# Searchsearch: insight: true # you need to install `hexo-generator-json-content` before using Insight Search swiftype: # enter swiftype install key here baidu: false # you need to disable other search engines to use Baidu search 分享支持weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin# Share# weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedinshare: enable: true # 是否启用分享 sites: weibo,qq,wechat,facebook,twitter # PC端显示的分享图标 mobile_sites: weibo,qq,qzone # 移动端显示的分享图标 评论主题集成了disqus、友言、来必力、gitment评论系统，选择其中一种即可# Comment# Gitment# Introduction: https://imsun.net/posts/gitment-introduction/comment: type: livere # 启用哪种评论系统 disqus: # enter disqus shortname here youyan: uid: *** # enter youyan uid livere: uid: *** # enter livere uid gitment: githubID: username repo: username.github.io ClientID: *** ClientSecret: *** lazy: false Github respostory复制theme/pure/_source/ 目录下repository文件夹到blog path/source/ 目录下# Githubgithub: username: *** # github username 豆瓣书单复制theme/pure/_source/ 目录下books文件夹到blog path/source/ 目录下# douban 豆瓣书单douban: user: *** # 豆瓣用户名 start: 0 # 从哪一条记录开始 count: 100 # 获取豆瓣书单数据条数 友情链接复制theme/pure/_source/ 目录下links文件夹到blog path/source/ 目录下在 hexo 目录下的 source 文件夹内创建一个名为 _data（禁止改名）的文件夹。然后在文件内创建一个名为 links.yml 的文件,在其中添加相关数据即可。单个友情链接的格式为：Name: link: http://example.com avatar: http://example.com/avatar.png desc: &quot;这是一个描述&quot;添加多个友情链接，我们只需要根据上面的格式重复填写即可。. 将 Name 改为友情链接的名字，例如 Cofess。. http://example.com 为友情链接的地址。. http://example.com/avatar.png 为友情链接的头像。. 这是一个描述 为友情链接描述。 文章启用目录索引title: 文章标题categories: - 文章分类tags: - 文章标签toc: true # 是否启用内容索引 博客优化 hexo-neatauto Minify html、js、css and make it neatnpm install hexo-neat --save在博客配置文件_config.yml中添加# hexo-neatneat_enable: trueneat_html: enable: true exclude: neat_css: enable: true exclude: - &apos;*.min.css&apos;neat_js: enable: true mangle: true output: compress: exclude: - &apos;*.min.js&apos; hexo-baidu-url-submitnpm install hexo-baidu-url-submit --save hexo-translate-title使用Google翻译，百度翻译和有道翻译将Hexo中的汉字标题转成英文标题安装npm install hexo-translate-title --save在博客配置文件_config.yml中添加translate_title: translate_way: google #google | baidu | youdao youdao_api_key: XXX youdao_keyfrom: XXX is_need_proxy: true #true | false proxy_url: http://localhost:8123注意：判断是否需要配置google本地代理，因为我在本地是开启时才能访问google翻译的，如果没有被墙，请将_config.yml 下的is_need_proxy: true改为false。如果设置为true,请设置本地代理地址 数学公式Hexo默认使用&quot;hexo-renderer-marked&quot;引擎渲染网页，该引擎会把一些特殊的markdown符号转换为相应的html标签 解决方案解决方案有很多，可以网上搜下，为了节省大家的时间，这里只提供亲身测试过的方法。更换Hexo的markdown渲染引擎，hexo-renderer-markdown-it-plus引擎替换默认的渲染引擎hexo-renderer-marked即可。 安装hexo-renderer-markdown-it-plus插件npm un hexo-renderer-marked --savenpm i hexo-renderer-markdown-it-plus --save 配置安装插件后，如果未正常渲染LaTeX数学公式，在博客配置文件_config.yml中添加markdown_it_plus: highlight: true html: true xhtmlOut: true breaks: true langPrefix: linkify: true typographer: quotes: “”‘’ plugins: - plugin: name: markdown-it-katex enable: true - plugin: name: markdown-it-mark enable: false 文章启用mathjaxtitle: Hello Worldmathjax: true","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://blog.cofess.com/tags/Hexo/"}]},{"title":"如何在Hexo中使用Mathjax渲染LaTeX数学公式","slug":"how-to-use-mathjax-to-render-latex-mathematical-formula-in-hexo","date":"2017-09-06T01:19:34.000Z","updated":"2017-11-12T09:07:08.582Z","comments":true,"path":"2017/09/06/how-to-use-mathjax-to-render-latex-mathematical-formula-in-hexo.html","link":"","permalink":"http://blog.cofess.com/2017/09/06/how-to-use-mathjax-to-render-latex-mathematical-formula-in-hexo.html","excerpt":"","text":"平时使用markdown写文档的时候，免不了会碰到数学公式，好在有强大的Mathjax,可以解析数学公式。基于Hexo搭建的个人博客，默认情况下渲染数学公式会出现各种各样的问题。Hexo默认使用&quot;hexo-renderer-marked&quot;引擎渲染markdown，该引擎会把一些特殊的markdown符号转换为相应的html标签。 解决方案解决方案有很多，可以网上搜下，为了节省大家的时间，这里提供亲身测试过的方法。更换Hexo的markdown渲染引擎，用hexo-renderer-markdown-it-plus引擎替换默认的渲染引擎hexo-renderer-marked即可。 安装先卸载hexo-renderer-marked，再安装hexo-renderer-markdown-it-plus插件npm uninstall hexo-renderer-marked --savenpm install hexo-renderer-markdown-it-plus --save 配置安装插件后，如果未正常渲染LaTeX数学公式，在博客配置文件_config.yml中添加markdown_it_plus: highlight: true html: true xhtmlOut: true breaks: true langPrefix: linkify: true typographer: quotes: “”‘’ plugins: - plugin: name: markdown-it-katex enable: true - plugin: name: markdown-it-mark enable: false 文章启用mathjaxtitle: Hello Worldmathjax: true 加载CSS最后在网页head部分加载mathjax样式表就搞定了&lt;link href=&quot;https://cdn.bootcss.com/KaTeX/0.7.1/katex.min.css&quot; rel=&quot;stylesheet&quot;&gt; 举个栗子$$H=-\\sum_&#123;i=1&#125;^N (\\sigma_&#123;i&#125;^x \\sigma_&#123;i+1&#125;^x+g \\sigma_&#123;i&#125;^z)$$$$f(n) = \\begin&#123;cases&#125; \\frac&#123;n&#125;&#123;2&#125;, &amp; \\text&#123;if &#125; n\\text&#123; is even&#125; \\\\ 3n+1, &amp; \\text&#123;if &#125; n\\text&#123; is odd&#125; \\end&#123;cases&#125;$$上面的代码渲染后显示如下：H=−∑i=1N(σixσi+1x+gσiz)H=-\\sum_{i=1}^N (\\sigma_{i}^x \\sigma_{i+1}^x+g \\sigma_{i}^z)H=−​i=1​∑​N​​(σ​i​x​​σ​i+1​x​​+gσ​i​z​​)f(n)={n2,ifniseven3n+1,ifnisoddf(n) = \\begin{cases} \\frac{n}{2}, &amp; \\text{if } n\\text{ is even} \\\\ 3n+1, &amp; \\text{if } n\\text{ is odd} \\end{cases}f(n)={​​2​​n​​,​3n+1,​​​if n is even​if n is odd​​","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://blog.cofess.com/tags/Hexo/"}]},{"title":"Hexo博客常用插件及用法","slug":"comon-plugins-and-usage-of-hexo-blog","date":"2017-08-16T05:16:27.000Z","updated":"2017-11-12T09:07:05.927Z","comments":true,"path":"2017/08/16/comon-plugins-and-usage-of-hexo-blog.html","link":"","permalink":"http://blog.cofess.com/2017/08/16/comon-plugins-and-usage-of-hexo-blog.html","excerpt":"","text":"hexo-autonofollowGithub：https://github.com/liuzc/hexo-autonofollow简介：自动为站外链接添加nofollow属性安装：$ npm install hexo-autonofollow --save配置：在博客配置文件_config.yml中添加nofollow: enable: true exclude: - exclude1.com - exclude2.comenable - 是否启用exclude - 排除域名 hexo-baidu-url-submitGithub：https://github.com/huiwang/hexo-baidu-url-submit简介：主动推送Hexo博客新链接至百度搜索引擎，解决百度爬虫被禁止访问的问题，提升网站收录质量和速度。安装：$ npm install hexo-baidu-url-submit --save配置：在博客配置文件_config.yml中添加baidu_url_submit: count: 1 ## 提交最新的一个链接 host: blog.cofess.com ## 在百度站长平台中注册的域名 token: your_token ## 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里! path: baidu_urls.txt ## 文本文档的地址， 新链接会保存在此文本文档里token - 您得注册百度站长工具，然后在工具-&gt;网页抓取-&gt;链接提交里找到你的密匙。其次，_config.ym文件中url的值， 必须是百度站长平台注册的域名， 比如:# URLurl: blog.cofess.comroot: /permalink: :year/:month/:day/:title/最后，加入新的deployer:deploy:- type: baidu_url_submitter执行hexo deploy的时候，新的链接就会被推送百度了。 hexo-generator-feedGithub：https://github.com/hexojs/hexo-generator-feed简介：RSS的生成插件，你可以在配置显示你站点的RSS，文件路径\\atom.xml。安装：$ npm install hexo-generator-feed --save配置：在博客配置文件_config.yml中添加feed: type: atom path: atom.xml limit: 20 hub: content:type - Feed type. (atom/rss2)path - Feed path. (Default: atom.xml/rss2.xml)limit - Maximum number of posts in the feed (Use 0 or false to show all posts)hub - URL of the PubSubHubbub hubs (Leave it empty if you don’t use it)content - (optional) set to ‘true’ to include the contents of the entire post in the feed. hexo-generator-sitemapGithub：https://github.com/hexojs/hexo-generator-sitemap简介：生成博客的sitemap。安装：$ npm install hexo-generator-sitemap --save配置：在博客配置文件_config.yml中添加sitemap: path: sitemap.xml hexo-generator-baidu-sitemapGithub：https://github.com/coneycode/hexo-generator-baidu-sitemap简介：生成博客的sitemap（针对百度）。安装：$ npm install hexo-generator-baidu-sitemap --save配置：在博客配置文件_config.yml中添加baidusitemap:path: baidusitemap.xml hexo-generator-json-contentGithub：https://github.com/alexbruno/hexo-generator-json-content简介：用于生成静态站点数据，提供搜索功能的数据源。安装：$ npm install hexo-generator-json-content --save配置：在博客配置文件_config.yml中添加jsonContent: ignore: - path/to/a/page - url/to/one/post - an-entire-category - specific.file - .ext # a file extension hexo-neatGithub：https://github.com/rozbo/hexo-neat简介：自动压缩html、css、js代码安装：$ npm install hexo-neat --save配置：在博客配置文件_config.yml中添加neat_enable: true压缩html代码neat_html: enable: true exclude:压缩CSSneat_css: enable: true exclude: - &apos;*.min.css&apos;压缩JSneat_js: enable: true mangle: true output: compress: exclude: - &apos;*.min.js&apos; hexo-translate-titleGithub：https://github.com/cometlj/hexo-translate-title简介：使用Google翻译，百度翻译和有道翻译将Hexo文章中的汉字标题转成英文标题安装：$ npm install hexo-translate-title --save配置：在博客配置文件_config.yml中添加translate_title: translate_way: google #google | baidu | youdao youdao_api_key: XXX youdao_keyfrom: XXX is_need_proxy: true #true | false proxy_url: http://localhost:4000注意：判断是否需要配置google本地代理，如果没有被墙，请将_config.yml下的is_need_proxy: true改为false。如果设置为true,请设置本地代理地址 hexo-wordcountGithub：https://github.com/willin/hexo-wordcount简介：为文章添加文章字数统计、文章预计阅读时间安装：$ npm install hexo-wordcount --save使用：通过以上安装后，你可以在你的模板文件加入以下相关的标签实现本插件的功能**字数统计:**WordCount**阅读时长预计:**Min2Read总字数统计: TotalCount hexo-generator-restfulGithub：https://github.com/yscoder/hexo-generator-restful简介：RESTful JSON数据生成插件。安装：$ npm install hexo-generator-restful --save配置：以下为默认配置，属性值为 false 表示不生成。restful: # site 可配置为数组选择性生成某些属性 # site: [&apos;title&apos;, &apos;subtitle&apos;, &apos;description&apos;, &apos;author&apos;, &apos;since&apos;, email&apos;, &apos;favicon&apos;, &apos;avatar&apos;] site: true # hexo.config mix theme.config posts_size: 10 # 文章列表分页，0 表示不分页 posts_props: # 文章列表项的需要生成的属性 title: true slug: true date: true updated: true comments: true path: true excerpt: false cover: true # 封面图，取文章第一张图片 content: false keywords: false categories: true tags: true categories: true # 分类数据 tags: true # 标签数据 post: true # 文章数据 pages: false # 额外的 Hexo 页面数据, 如 About","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://blog.cofess.com/tags/Hexo/"}]},{"title":"第三方社会化评论系统整理","slug":"third-party-socialization-review-system","date":"2017-08-15T03:19:22.000Z","updated":"2017-11-12T09:07:08.582Z","comments":true,"path":"2017/08/15/third-party-socialization-review-system.html","link":"","permalink":"http://blog.cofess.com/2017/08/15/third-party-socialization-review-system.html","excerpt":"","text":"网站经常要用到第三方社会化评论系统，评论可以增加用户之间的互动，到底有哪些社会化评论系统可供选择？常见的有：畅言、友言、评论啦、贝米Baye.me、多说等，有一些已经无法使用了。 多说目前状态：服务已关闭，不可用是否需要备案：否是否需要注册：是简介：各种网站程序都支持，支持评论回流，评论导入、导出。垃圾评论多、界面有点丑。网址：http://duoshuo.com/ 畅言目前状态：可正常使用是否需要备案：是是否需要注册：是简介：大厂出品，稳定性、长久性都值得信赖。完美匹配PC端和移动端，拥有智能反垃圾系统。网址：http://changyan.kuaizhan.com/ 友言目前状态：可正常使用是否需要备案：否是否需要注册：否，如需获取个人专属评论系统需注册简介：支持单点登录，评论导入、导出、自适应PC端和移动端。系统审核不行，垃圾评论多。网址：http://www.uyan.cc/ 网易云跟帖目前状态：服务已关闭，不可用是否需要备案：否是否需要注册：是简介：云跟帖是2016年6月网易才推出的一个新产品，号称“最专业的评论聚合与分享平台”，可以智能联通不同网站同一新闻下的评论，全民互动。如今已关闭服务。网址：https://gentie.163.com/ 来必力目前状态：可正常使用是否需要备案：否是否需要注册：是简介：来比力(支持英语、中文、韩语)等少数几个，提供管理页面，管理网站评论内容。可手动隐藏恶性评论与灌水内容。主要应用在一些大型的新闻资讯站点上，支持社会化账号及Openid的登录，同样具有Voting功能。网址：https://livere.com/ Disqus目前状态：可正常使用，国外（可能需要翻墙）是否需要备案：否是否需要注册：是简介：可以使用在多个平台上，包括主流的Wordpress及Joomla, Dupral等等系统，很多大型网站都直接使用Disqus，也可以看出Disqus在第三评论系统里面的地位。它集成的第三方登录基本上是国外的，比如Facebook，Twitter，Google+，linkedin等。但是这种登录在国内基本都是用不了的。所以国内的博客系统或cms还是不推荐大家使用Disqus。网址：https://disqus.com/你还知道有哪些第三方评论系统？留言补充吧……","categories":[{"name":"建站","slug":"build-website","permalink":"http://blog.cofess.com/categories/build-website/"}],"tags":[{"name":"Social","slug":"social","permalink":"http://blog.cofess.com/tags/social/"}]},{"title":"gulp常用插件整理","slug":"gulp-plug-ins","date":"2017-08-06T14:52:29.000Z","updated":"2017-11-12T09:07:08.582Z","comments":true,"path":"2017/08/06/gulp-plug-ins.html","link":"","permalink":"http://blog.cofess.com/2017/08/06/gulp-plug-ins.html","excerpt":"","text":"任务管理 gulp-nodemonLinks: https://www.npmjs.com/package/gulp-nodemon作用：自动启动/重启你的node程序，开发node服务端程序必备。 gulp-task-listingLinks: https://www.npmjs.com/package/gulp-task-listing作用：打印出gulpfile.js中定义的所有task。 require-dirLinks: https://www.npmjs.com/package/require-dir作用：分离任务到多个文件中。 run-sequenceLinks: https://www.npmjs.com/package/run-sequence作用：让gulp任务，可以相互独立，解除任务间的依赖，增强task复用。 yargsLinks: https://www.npmjs.com/package/yargs作用：用于获取启动参数，针对不同参数，切换任务执行过程时需要。 util工具类 gulp-utilLinks: https://www.npmjs.com/package/gulp-util作用：gulp常用的工具库。 gulp-load-pluginsLink：https://www.npmjs.com/package/gulp-load-plugins作用：自动加载插件。 自动刷新 gulp-connectLinks: https://www.npmjs.com/package/gulp-connect作用：前端数据模拟服务器，同时也支持浏览器自动刷新。 browser-syncLinks: http://www.browsersync.io/作用：静态文件服务器，同时也支持浏览器自动刷新，它能实现LiveReload所有功能。 gulp-livereloadLink：https://www.npmjs.com/package/gulp-load-plugins作用：自动刷新。 编译类 gulp-base64Link：https://www.npmjs.com/package/gulp-base64作用：把小图片转成base64字符串。 gulp-babelLink：https://www.npmjs.com/package/gulp-babel作用：让ES6编写的JavaScript代码转化成浏览器可以理解的JavaScript代码。使用 babel 编译 JS 文件，比如将ES6代码编译成ES5。 gulp-lessLink：https://www.npmjs.com/package/gulp-less作用：将less文件编译成css,当有less文件发生改变自动编译less,并保证less语法错误或出现异常时能正常工作并提示错误信息。 gulp-sassLink：https://www.npmjs.com/package/gulp-sass作用：把 Sass 编译成 CSS。 gulp-postcssLink：https://www.npmjs.com/package/gulp-postcss作用：把 postcss 编译成 CSS。 gulp-coffeeLinks: https://github.com/wearefractal/gulp-coffee作用：编译coffee代码为Js代码，使用coffeescript必备。 gulp-sourcemapsLink：https://www.npmjs.com/package/gulp-sourcemaps作用：处理JS时，生成SourceMap。 压缩类 gulp-uglifyLink：https://www.npmjs.com/package/gulp-uglify作用：用来混淆、压缩js文件，使用的是uglify引擎。 gulp-minifyLink：https://www.npmjs.com/package/gulp-minify作用：压缩js文件,推荐使用gulp-uglify，Minify JavaScript with UglifyJS2.。 gulp-minify-inline-scriptsLink：https://www.npmjs.com/package/gulp-minify-inline-scripts作用：压缩行内脚本。 gulp-minify-cssLink：https://www.npmjs.com/package/gulp-minify-css作用：css文件压缩，gulp-minify-css已经被废弃，请使用gulp-clean-css。 gulp-clean-cssLink：https://www.npmjs.com/package/gulp-clean-css作用：css文件进行去注释,css文件压缩。 gulp-cssoLink：https://www.npmjs.com/package/gulp-csso作用：压缩优化css。 gulp-userefLink：https://www.npmjs.com/package/gulp-useref作用：解析构建块在HTML文件来代替引用未经优化的脚本和样式表。 gulp-html-replaceLink：https://www.npmjs.com/package/gulp-html-replace作用：替换html中的构建块。Replace build blocks in HTML. Like useref but done right. gulp-minify-htmlLink：https://www.npmjs.com/package/gulp-minify-html作用：html文件压缩，已废弃，推荐使用gulp-htmlmin。 gulp-htmlminLink：https://github.com/jonschlinkert/gulp-htmlmin作用：html文件压缩,如去换行，去注释等。 jsonminifyLink：https://www.npmjs.com/package/jsonminify作用：Json压缩 gulp-pretty-dataLink：https://www.npmjs.com/package/gulp-pretty-data作用：压缩美化xml, json, css, sql。 gulp-imageLink：https://www.npmjs.com/package/gulp-image作用：图片压缩。 gulp-imageminLink：https://www.npmjs.com/package/gulp-imagemin作用：图片压缩,对jpg、png等格式问的图片进行无损的压缩（特别有用，但是在你的node-modules中的插件过多时会存在图片压缩过慢的问题问题）。 imagemin-pngquantLink：https://www.npmjs.com/package/imagemin-pngquant作用：图片压缩。 gulp-zipLink：https://www.npmjs.com/package/gulp-zip作用：ZIP压缩文件。 css sprites 图片精灵 gulp.spritesmithLinks：https://www.npmjs.com/package/gulp.spritesmith作用：Convert a set of images into a spritesheet and CSS variables via gulp. gulp.spritesmith-multiLinks：https://www.npmjs.com/package/gulp.spritesmith-multi作用：A wrapper for gulp.spritesmith to generate multiple sprites and stylesheets. gulp-sprite-generatorLinks：https://www.npmjs.com/package/gulp-sprite-generator作用：Plugin that generate sprites from your stylesheets (using spritesmith) and then updates image references. gulp-spritesmithLinks：https://www.npmjs.com/package/gulp-spritesmith作用：Gulp plugin for sprite generation, based on spritesmith. 文件类 delLinks：https://www.npmjs.com/package/del作用：删除文件/文件夹。 gulp-cleanLinks：https://www.npmjs.com/package/gulp-clean作用：删除文件/文件夹。 gulp-concatLink：https://www.npmjs.com/package/gulp-concat作用：文件合并，合并JS。 gulp-renameLink：https://www.npmjs.com/package/gulp-rename作用：用来重命名文件流中的文件。 gulp-filterLink：https://www.npmjs.com/package/gulp-filter作用：在虚拟文件流中过滤文件。 代码审查、自动补全 gulp-eslintLink：https://www.npmjs.com/package/gulp-eslint作用：检查Javascript编程时的语法错误，与gulp-jshint二选一即可。 gulp-jshintLink：https://www.npmjs.com/package/gulp-jshint作用：js代码检查，与gulp-eslint二选一即可。 gulp-autoprefixerLinks：https://www.npmjs.com/package/gulp-autoprefixer作用：使用Autoprefixer来补全浏览器兼容的css，与autoprefixer功能相同，二选一即可。 autoprefixerLinks：https://www.npmjs.com/package/autoprefixer作用：自动添加浏览器前缀,补全浏览器兼容的css。 注释类 gulp-headerLinks：https://www.npmjs.com/package/gulp-header作用：用来在压缩后的JS、CSS文件中添加头部注释，你可以包含任意想要的信息，通常就是作者、描述、版本号、license等。 gulp-footerLinks：https://www.npmjs.com/package/gulp-footer作用：用来在压缩后的JS、CSS文件中添加页脚注释。 自动加版本号 gulp-make-css-url-versionLinks：https://www.npmjs.com/package/gulp-make-css-url-version作用：默认是取图片文件的md5值作为版本号。 gulp-revLinks：https://www.npmjs.com/package/gulp-rev作用：对文件进行hash命名，并且生成对应的json文件(对css、js文件名加MD5后缀)，配合gulp-rev-collector使用。 gulp-rev-collectorLinks：https://www.npmjs.com/package/gulp-rev-collector作用：结合gulp-rev对hash的文件在html文件中进行引用路径更改,替换html中的链接，配合gulp-rev使用。 单位转换 postcss-px2remLinks：https://www.npmjs.com/package/postcss-px2rem作用：px单位转换成rem单位 流控制 gulp-ifLinks：https://www.npmjs.com/package/gulp-if作用：有条件地运行一个任务。 调试 gulp-debugLinks：https://www.npmjs.com/package/gulp-debug作用：gulp脚本调试。 gulp-debug-streamsLinks：https://www.npmjs.com/package/gulp-debug-streams作用：gulp脚本调试。 gutil-waterlogLinks：https://www.npmjs.com/package/gutil-waterlog作用：gulp任务日志。 gulp-logwarnLinks：https://www.npmjs.com/package/gulp-logwarn作用：gulp任务日志。 gulp-spyLinks：https://www.npmjs.com/package/gulp-spy作用：gulp脚本调试。 gulp-plumber：错误处理插件Links：https://www.npmjs.com/package/gulp-plumber作用：使用watch模式可以更高效的开发，监听到改动就自动执行任务，但是如果过程中遇到错误，gulp就会报错并终止watch模式，必须重新启动gulp，利用gulp-plumber可以实现错误自启动。 gulp-notify：消息插件Links：https://www.npmjs.com/package/gulp-notify作用：显示报错信息和报错后不终止当前gulp任务。 增量编译 gulp-cacheLinks：https://www.npmjs.com/package/gulp-cache作用：检测改动的文件,图片缓存，只有图片替换了才压缩 gulp-cachedLinks：https://www.npmjs.com/package/gulp-cached作用：增量编译打包,对文件进行复制时，只是对那行更改过的文件进行复制，减少不必要的资源操作。 gulp-rememberLinks：https://www.npmjs.com/package/gulp-remember作用：配合gulp-cached使用。 gulp-changedLinks：https://www.npmjs.com/package/gulp-changed作用：只编译或打包改变过文件 ，大大加快了gulp task的执行速度,跟gulp-cacahed插件类似，主要是在对文件进行复制时，如果该文件没有改动过，那么就不允许该文件复制到目标文件件。（实测时看不出来，如果使用cached,就不用使用这个了）。实际开发中用 gulp-cached+gulp-remember 的组合非常合适。 项目模板化 gulp-dataLinks：https://www.npmjs.com/package/gulp-data作用：提供数据，该数据可被其他gulp插件使用。 gulp-templateLinks：https://www.npmjs.com/package/gulp-template作用：渲染模板，替换变量以及动态html。 gulp-file-includeLinks：https://www.npmjs.com/package/gulp-file-include作用：include 文件。 文件目录 gulp-recursive-folderLinks：https://www.npmjs.com/package/gulp-recursive-folder作用：Gulp plugin that work with folders treat them recursively。 gulp-foldersLinks：https://www.npmjs.com/package/gulp-folders作用：Gulp plugin that lets you work with folders and treat them as package names。 格式化 gulp-jsbeautifierLinks：https://www.npmjs.com/package/gulp-jsbeautifier作用：Prettify JavaScript, JSON, HTML and CSS. gulp-beautifyLinks：https://www.npmjs.com/package/gulp-beautify作用：This is a gulp plugin for js-beautify. gulp-group-css-media-queriesLinks：https://www.npmjs.com/package/gulp-group-css-media-queries作用：格式化css媒体查询语句。 其他插件 pretty-errorLinks：https://www.npmjs.com/package/pretty-error作用：一个小工具，美化node.js错误提示。 gulp-statsLinks：https://www.npmjs.com/package/gulp-stats作用：显示gulp任务统计信息。 gulp-task-builderLinks：https://www.npmjs.com/package/gulp-task-builder作用：JSON配置构建任务。 gulp-groupLinks：https://www.npmjs.com/package/gulp-group作用：任务分组。 gulp-listLinks：https://www.npmjs.com/package/gulp-list作用：在控制台列出所有可用任务。","categories":[{"name":"前端","slug":"front-end-development","permalink":"http://blog.cofess.com/categories/front-end-development/"}],"tags":[{"name":"Gulp","slug":"gulp","permalink":"http://blog.cofess.com/tags/gulp/"}]},{"title":"Hexo搭建个人博客并部署到Github","slug":"hexo-builds-personal-blogs-and-deploys-them-to-github","date":"2017-04-09T06:49:13.000Z","updated":"2017-11-12T09:07:05.927Z","comments":true,"path":"2017/04/09/hexo-builds-personal-blogs-and-deploys-them-to-github.html","link":"","permalink":"http://blog.cofess.com/2017/04/09/hexo-builds-personal-blogs-and-deploys-them-to-github.html","excerpt":"","text":"准备你需要准备好以下软件：Node.js环境和Git Hexo安装npm install hexo -g 升级更新hexo到最新版npm update hexo -g 初始化hexo init &lt;folder&gt;如果指定，便会在目前的资料夹建立一个名为的新文件夹；否则会在目前资料夹初始化。 生成网站hexo g 启动本地服务hexo s启动服务后，就可以访问：http://localhost:4000/（port 预设为 4000，可在 _config.yml 设定） RSS订阅命令行切换到hexo博客根目录，安装hexo-generator-feed$ npm install hexo-generator-feed --save在博客目录的_config.yml中添加如下代码## feed feed: type: atom path: atom.xml limit: 20 hub: content: sitemap站点地图命令行切换到hexo博客根目录，分别用下面两个命令来安装针对谷歌和百度的sitemap插件npm install hexo-generator-sitemap --savenpm install hexo-generator-baidu-sitemap --save在博客目录的_config.yml中添加如下代码## sitemapsitemap: path: sitemap.xmlbaidusitemap: path: baidusitemap.xml 部署步骤每次部署的步骤，可按以下三步来进行。hexo cleanhexo generatehexo deploy一些常用命令：hexo new &quot;postName&quot; #新建文章hexo new page &quot;pageName&quot; #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）hexo deploy #将.deploy目录部署到GitHubhexo help # 查看帮助hexo version #查看Hexo的版本","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://blog.cofess.com/tags/Hexo/"},{"name":"Github","slug":"Github","permalink":"http://blog.cofess.com/tags/Github/"}]}]}